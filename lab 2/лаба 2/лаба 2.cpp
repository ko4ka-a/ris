#include <iostream>
#include <string>
using namespace std;
class Автомобиль {
private:
    string марка;
    string модель;
    int стоимость;

public:
    // Конструктор без параметров
    Автомобиль() : марка("неизвестна"), модель("неизвестна"), стоимость(0) {
        cout << "Конструктор без параметров\n";
    }

    // Конструктор с параметрами
    Автомобиль(const string& марка, const string& модель, int стоимость)
        : марка(марка), модель(модель), стоимость(стоимость) {
        cout << "Конструктор с параметрами\n";
    }

    // Конструктор копирования
    Автомобиль(const Автомобиль& other)
        : марка(other.марка), модель(other.модель), стоимость(other.стоимость) {
        cout << "Конструктор копирования\n";
    }

    // Деструктор
    ~Автомобиль() {
        cout << "Деструктор для " << марка << " " << модель << "\n";
    }

    // Селекторы (геттеры)
    string getМарка() const { return марка; }
    string getМодель() const { return модель; }
    int getСтоимость() const { return стоимость; }

    // Модификаторы (сеттеры)
    void setМарка(const string& новаяМарка) { марка = новаяМарка; }
    void setМодель(const string& новаяМодель) { модель = новаяМодель; }
    void setСтоимость(int новаяСтоимость) { стоимость = новаяСтоимость; }
};

int main() {
    setlocale(LC_ALL, "Rus");
    // Создание объекта с использованием конструктора без параметров
    Автомобиль car1;
    cout << "Марка: " << car1.getМарка() << ", Модель: " << car1.getМодель() << ", Стоимость: " << car1.getСтоимость() << "\n";

    // Создание объекта с использованием конструктора с параметрами
    Автомобиль car2("Тойота", "Камри", 25000);
    cout << "Марка: " << car2.getМарка() << ", Модель: " << car2.getМодель() << ", Стоимость: " << car2.getСтоимость() << "\n";

    // Создание объекта с использованием конструктора копирования
    Автомобиль car3 = car2;
    cout << "Марка: " << car3.getМарка() << ", Модель: " << car3.getМодель() << ", Стоимость: " << car3.getСтоимость() << "\n";

    return 0;
}