#pragma once
#include <iostream>//библиотека дл€ работы со стандартными потоками
#include <fstream> //библиотека дл€ работы со файловыми потоками
using namespace std;
class Money
{
public: // ќткрыта€ секци€ - члены класса ниже этой строки доступны извне класса.
    Money(); // ќбъ€вление конструктора по умолчанию.
    Money(long, int); // ќбъ€вление конструктора с параметрами.
    Money(const Money&); // ќбъ€вление конструктора копировани€.
    long Get_rub(); // ќбъ€вление метода дл€ получени€ рублей.
    int Get_kop(); // ќбъ€вление метода дл€ получени€ копеек.
    bool operator>(const Money&) const; // ќбъ€вление перегруженного оператора "больше".
    bool operator<(const Money&) const; // ќбъ€вление перегруженного оператора "меньше".
    Money& operator++(); // ќбъ€вление префиксного оператора инкремента.
    Money operator++(int); // ќбъ€вление постфиксного оператора инкремента.
    Money operator*(const double); // ќбъ€вление перегруженного оператора умножени€.
    Money operator=(const Money&); // ќбъ€вление перегруженного оператора присваивани€.
    friend ostream& operator<<(ostream& out, const Money& m); // ќбъ€вление перегруженного оператора вставки в поток как друг класса.
    friend istream& operator>>(istream& in, Money& m); // ќбъ€вление перегруженного оператора извлечени€ из потока как друг класса.
    friend fstream& operator>>(fstream& fin, Money& p); // ќбъ€вление перегруженного оператора ввода из файла как друг класса.
    friend fstream& operator<<(fstream& fout, const Money& p); // ќбъ€вление перегруженного оператора вывода в файл как друг класса.
public: // ≈щЄ одна открыта€ секци€ дл€ €сности, не об€зательна, но обща€ практика.
    ~Money(); // ќбъ€вление деструктора.
private: // «акрыта€ секци€ - члены класса ниже этой строки доступны только внутри класса.
    long rub; // ѕеременна€-член дл€ хранени€ рублей.
    int kop; // ѕеременна€-член дл€ хранени€ копеек.
};
